package model;

import java.math.BigDecimal;

import javax.swing.ImageIcon;

import dao.ClienteDAO;
import exceptions.ClienteException;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : @Almacén
//  @ File Name : Producto.java
//  @ Date : @Sept2018
//  @ Author : @Grupo 1
//		Boujon Di Maio, Antonella.
//		Gomila, Tomas Guido.		
//		Graue, Florencia.
//		Retamar, Nicolas.
//
//



public class Producto {
	private Integer idProducto;
	private String codigoBarras;
	private String descripcion;
	private BigDecimal precioVenta;
	private int cantFijaCompra;
	private int cantMinimaStock;
	private int stockActual;
	private boolean estadoActivo;
	private ImageIcon foto;
	
	
	//TODO = Cambiar este constructor a DTO
	public Producto(Integer idProducto, String codigoBarras, String descripcion, BigDecimal precioVenta,
			int cantFijaCompra, int cantMinimaStock, int stockActual, boolean estadoActivo, ImageIcon foto) {
		super();
		this.idProducto = idProducto;
		this.codigoBarras = codigoBarras;
		this.descripcion = descripcion;
		this.precioVenta = precioVenta;
		this.cantFijaCompra = cantFijaCompra;
		this.cantMinimaStock = cantMinimaStock;
		this.stockActual = stockActual;
		this.estadoActivo = estadoActivo;
		this.foto = foto;
	}

	public Integer getIdProducto() {
		return idProducto;
	}

	public void setIdProducto(Integer idProducto) {
		this.idProducto = idProducto;
	}

	public String getCodigoBarras() {
		return codigoBarras;
	}

	public void setCodigoBarras(String codigoBarras) {
		this.codigoBarras = codigoBarras;
	}

	public String getDescripcion() {
		return descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	public BigDecimal getPrecioVenta() {
		return precioVenta;
	}

	public void setPrecioVenta(BigDecimal precioVenta) {
		this.precioVenta = precioVenta;
	}

	public int getCantFijaCompra() {
		return cantFijaCompra;
	}

	public void setCantFijaCompra(int cantFijaCompra) {
		this.cantFijaCompra = cantFijaCompra;
	}

	public int getCantMinimaStock() {
		return cantMinimaStock;
	}

	public void setCantMinimaStock(int cantMinimaStock) {
		this.cantMinimaStock = cantMinimaStock;
	}

	public int getStockActual() {
		return stockActual;
	}

	public void setStockActual(int stockActual) {
		this.stockActual = stockActual;
	}

	public boolean isEstadoActivo() {
		return estadoActivo;
	}

	public void setEstadoActivo(boolean estadoActivo) {
		this.estadoActivo = estadoActivo;
	}

	public ImageIcon getFoto() {
		return foto;
	}

	public void setFoto(ImageIcon foto) {
		this.foto = foto;
	}
	
	
	
	public ProductoDTO toDTO() {
		
	}
	
	public Producto save() {
		
		Producto produ = ProductoDAO.getInstance().save(this);
		
		return produ;
		
	}
	
	public boolean hayStock(int cantidad) {
		
		if(cantidad <= stockActual)
			return true;
		else
			return false;
		
	}
	
	public boolean despacharStock(int cantidad) {
		if(hayStock(cantidad)) {
			stockActual = stockActual - cantidad;
			save();
		}
		else {
			return false;
		}
		
		
	}
	
	public void recepcionarStock(int cantidad) {
		stockActual = stockActual + cantidad;
		save();
	}
	
	public void darDeBaja() {
		estadoActivo = false;
		save();
	}
	
	public int getCantidadByPedido(int cantidad) {
		int aux = cantFijaCompra;
		while (aux < cantidad)
			aux += cantFijaCompra;
		return aux;
	}
	
	public boolean soyElProducto(String codigoBarras) {
		if(codigoBarras.equals(this.codigoBarras))
			return true;
		return false;
	}
	
	
	
}
